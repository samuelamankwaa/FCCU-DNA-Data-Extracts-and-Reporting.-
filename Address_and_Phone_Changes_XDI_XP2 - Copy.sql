SELECT C.INDIVIDUAL_ID
     ,MAX(C.FIRST_NAME) AS FIRST_NAME
     ,MAX(C.LAST_NAME) AS LAST_NAME
     ,MAX(C.D1NAME) AS D1NAME
     ,MAX(C.MEMBER_NBR) as MEMBER_NBR
     ,MAX(C.B_ADDRESS1) AS B_ADDRESS1
     ,MAX(C.B_ADDRESS2) AS B_ADDRESS2
     ,MAX(C.B_CITY) AS B_CITY
     ,MAX(C.B_STATE) AS B_STATE
     ,MAX(C.B_ZIP) AS B_ZIP
     ,MAX(C.A_ADDRESS1) AS A_ADDRESS1
     ,MAX(C.A_ADDRESS2) AS A_ADDRESS2
     ,MAX(C.A_CITY) AS A_CITY
     ,MAX(C.A_STATE) AS A_STATE
     ,MAX(C.A_ZIP) AS A_ZIP
     ,MAX(C.TELLER) AS TELLER
     ,MAX(C.P_ADDRESS1) AS P_ADDRESS1
     ,MAX(C.P_ADDRESS2) AS P_ADDRESS2
     ,MAX(C.P_CITY) AS P_CITY
     ,MAX(C.P_STATE) AS P_STATE
     ,MAX(C.P_ZIP) AS P_ZIP
FROM (
     -- First part of the UNION
     SELECT A.INDIVIDUAL_ID
           ,ID.FIRST_NAME
           ,ID.LAST_NAME
           ,ID.D1NAME
           ,RIGHT(A.MEMBER, 4) as MEMBER_NBR
           ,BA.ADDRESS1 AS B_ADDRESS1
           ,BA.ADDRESS2 AS B_ADDRESS2
           ,BA.CITY AS B_CITY
           ,BA.STATE AS B_STATE
           ,BA.ZIP_STR AS B_ZIP
           ,AA.ADDRESS1 AS A_ADDRESS1
           ,AA.ADDRESS2 AS A_ADDRESS2
           ,AA.CITY AS A_CITY
           ,AA.STATE AS A_STATE
           ,AA.ZIP_STR AS A_ZIP
           ,A.TELLER
           ,NULL AS P_ADDRESS1
           ,NULL AS P_ADDRESS2
           ,NULL AS P_CITY
           ,NULL AS P_STATE
           ,NULL AS P_ZIP
     FROM (
           SELECT AI.INDIVIDUAL_ID
                 ,MAX(A.BEFORE_REPRESENTATION) AS BEFORE
                 ,MAX(A.AFTER_REPRESENTATION) AS AFTER
                 ,MAX(A.FOCUS_TELLER_ID) AS TELLER
                 ,MAX(SUBSTRING(A.KEY_REPRESENTATION, CHARINDEX('=', A.KEY_REPRESENTATION) + 1, CHARINDEX('|', A.KEY_REPRESENTATION) - CHARINDEX('=', A.KEY_REPRESENTATION) - 1)) as MEMBER
           FROM dbo.DATAAUDIT A
           INNER JOIN dbo.ACTIVITYINFO AI ON A.ACTIVITY_ID = AI.ACTIVITY_ID AND AI.INFO_TEXT IN ('AddressUpdateLogic Transaction - IndividualAddress', 'Update Phone Non-Financial Transaction')
           WHERE CAST(A.ADDTIMESTAMP as DATE) >= (CASE WHEN DATEPART(dw, GETDATE()) = 2 THEN (GETDATE() - 3) ELSE (GETDATE() - 1) END)
                 AND A.TABLE_NAME = 'MEMBERSHIPADDRESS'
                 AND A.FOCUS_TELLER_ID NOT IN (-1, 342, 8870, 8840, 8876, 2204)
                 AND A.COLUMN_NAME = 'ADDRESS_ID'
           GROUP BY AI.INDIVIDUAL_ID
          ) A
     INNER JOIN dbo.INDIVIDUAL ID ON A.INDIVIDUAL_ID = ID.INDIVIDUAL_ID
     INNER JOIN dbo.ADDRESS BA ON A.BEFORE = BA.ADDRESS_ID
     INNER JOIN dbo.ADDRESS AA ON A.AFTER = AA.ADDRESS_ID
     UNION ALL
     -- Second part of the UNION
     SELECT B.INDIVIDUAL_ID
           ,ID.FIRST_NAME
           ,ID.LAST_NAME
           ,ID.D1NAME
           ,RIGHT(B.MEMBER, 4) as MEMBER_NBR
           ,NULL AS B_ADDRESS1
           ,NULL AS B_ADDRESS2
           ,NULL AS B_CITY
           ,NULL AS B_STATE
           ,NULL AS B_ZIP
           ,NULL AS A_ADDRESS1
           ,NULL AS A_ADDRESS2
           ,NULL AS A_CITY
           ,NULL AS A_STATE
           ,NULL AS A_ZIP
           ,NULL AS TELLER
           ,AD.ADDRESS1 AS P_ADDRESS1
,AD.ADDRESS2 AS P_ADDRESS2
,AD.CITY AS P_CITY
,AD.STATE AS P_STATE
,AD.ZIP_STR AS P_ZIP
FROM (
SELECT AI.INDIVIDUAL_ID
,MAX(A.BEFORE_REPRESENTATION) AS BEFORE
,MAX(A.AFTER_REPRESENTATION) AS AFTER
,MAX(AI.MEMBER_NBR) as MEMBER
FROM dbo.DATAAUDIT A
INNER JOIN dbo.ACTIVITYINFO AI ON A.ACTIVITY_ID = AI.ACTIVITY_ID AND AI.INFO_TEXT IN ('AddressUpdateLogic Transaction - IndividualAddress', 'Update Phone Non-Financial Transaction')
WHERE CAST(A.ADDTIMESTAMP as DATE) >= (CASE WHEN DATEPART(dw, GETDATE()) = 2 THEN (GETDATE() - 3) ELSE (GETDATE() - 1) END)
AND A.TABLE_NAME = 'PHONE'
AND A.FOCUS_TELLER_ID NOT IN (-1, 342, 8870, 8840, 8876, 2204)
AND A.COLUMN_NAME = 'NUMBER'
AND A.BEFORE_REPRESENTATION IS NOT NULL
GROUP BY AI.INDIVIDUAL_ID
) B
INNER JOIN dbo.INDIVIDUAL ID ON B.INDIVIDUAL_ID = ID.INDIVIDUAL_ID
INNER JOIN dbo.INDIVIDUALADDRESS IA ON B.INDIVIDUAL_ID = IA.INDIVIDUAL_ID AND IA.IS_PRIMARY = 1
INNER JOIN dbo.ADDRESS AD ON IA.ADDRESS_ID = AD.ADDRESS_ID
) AS C
GROUP BY C.INDIVIDUAL_ID;